{"version":3,"sources":["PopoverButton.js","AddRules.js","AddContents.js","App.js","serviceWorker.js","index.js"],"names":["PopoverButton","name","displayPopover","isPopoverActive","activeButton","hidePopover","content","children","injectCallback","isSelected","classes","toClone","cloned","React","cloneElement","onFinished","className","onClick","e","stopPropagation","AddRules","rules","setRules","useState","canonical","display","ruleInEdit","setRuleInEdit","inputRef","useRef","useEffect","current","focus","id","onSubmit","preventDefault","htmlFor","ref","type","value","onChange","v","target","find","r","mod","push","contents","form","AddContents","index","isDeleteable","state","setState","handleChange","i","old","handleDeleteContent","filter","_","j","map","key","FreezeButton","isFrozen","setIsFrozen","text","App","setIsPopoverActive","popoverContent","setPopoverContent","setActiveButton","slidingOut","setSlidingOut","originRule","setOriginRule","traceryOutput","setTraceryOutput","timeout","ms","Promise","res","setTimeout","a","currentTarget","o","PopoverButtonWrapper","popoverClass","inGrammar","reduce","acc","curr","grammar","tracery","createGrammar","addModifiers","baseEngModifiers","flatten","split","rule","href","line","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e68842e7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\n\nconst PopoverButton = ({\n  name,\n  displayPopover,\n  isPopoverActive,\n  activeButton,\n  hidePopover,\n  content,\n  children,\n  injectCallback,\n}) => {\n  const isSelected = isPopoverActive && activeButton === name;\n  const selectedClass = isSelected ? \"selectedButton\" : \"unselectedButton\";\n  const classes = `ruleButton ${selectedClass}`;\n\n  const toClone = content || children;\n  var cloned = null;\n  if (toClone && injectCallback) {\n    cloned = React.cloneElement(toClone, { onFinished: hidePopover });\n  }\n\n  return (\n    <div className=\"ruleButtonDiv\">\n      <button\n        onClick={(e) => {\n          e.stopPropagation();\n          if (isSelected) {\n            hidePopover(e);\n          } else {\n            if (isPopoverActive) hidePopover();\n            displayPopover(name, cloned || toClone || \"\");\n          }\n        }}\n        className={classes}\n      >\n        {name}\n      </button>\n    </div>\n  );\n};\n\nPopoverButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  displayPopover: PropTypes.func.isRequired,\n  isPopoverActive: PropTypes.bool.isRequired,\n  activeButton: PropTypes.string.isRequired,\n  hidePopover: PropTypes.func.isRequired,\n  content: PropTypes.node,\n  children: PropTypes.node,\n  injectCallback: PropTypes.bool,\n};\n\nexport default PopoverButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddRules = ({ rules, setRules, onFinished }) => {\n  const [ruleInEdit, setRuleInEdit] = React.useState({\n    canonical: \"\",\n    display: \"\",\n  });\n  const handleRuleInEditChange = (e) => {\n    const v = e.target.value;\n    if (!rules.find((r) => r.name === v)) {\n      const mod = [...rules];\n      mod.push({ name: v, contents: [] });\n      setRules(mod);\n      setRuleInEdit({ canonical: v, display: v });\n    } else {\n      setRules(rules);\n      setRuleInEdit(({ canonical }) => {\n        return { canonical: canonical, display: v };\n      });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    if (onFinished) onFinished();\n    e.preventDefault();\n  };\n\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  return (\n    <div id=\"AddRulesPopover\" className=\"AddPopover\">\n      <h2>Add Rules</h2>\n      <p>\n        Enter a rule name below to create a new Tracery rule. The rule can then\n        be reference using the format <code>#ruleName#</code>\n      </p>\n      <form id=\"addRuleForm\" onSubmit={handleSubmit}>\n        <label htmlFor=\"ruleInput\">Rule name:</label>\n        <input\n          id=\"ruleInput\"\n          ref={inputRef}\n          type=\"text\"\n          value={ruleInEdit.display}\n          onChange={handleRuleInEditChange}\n          className=\"addInput\"\n        />\n      </form>\n      <div id=\"bottomButtons\">\n        <button type=\"submit\" form=\"addRuleForm\">\n          Finished\n        </button>\n      </div>\n    </div>\n  );\n};\n\nAddRules.propTypes = {\n  rules: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setRules: PropTypes.func.isRequired,\n  onFinished: PropTypes.func,\n};\n\nexport default AddRules;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst AddContents = ({\n  contents,\n  setRules,\n  onFinished,\n  index,\n  isDeleteable,\n}) => {\n  const [state, setState] = React.useState(contents);\n\n  const handleChange = (i) => {\n    return (e) => {\n      const v = e.target.value;\n      setState((old) => {\n        const mod = [...old];\n        mod[i] = v;\n        return mod;\n      });\n    };\n  };\n\n  const handleDeleteContent = (i) => {\n    return () => {\n      setState((old) => {\n        return old.filter((_, j) => i !== j);\n      });\n    };\n  };\n\n  const handleDeleteRule = () => {\n    setRules((old) => {\n      return old.filter((_, i) => i !== index);\n    });\n    onFinished();\n  };\n\n  const handleAdd = () => {\n    setState((old) => {\n      const mod = [...old];\n      mod.push(\"\");\n      return mod;\n    });\n  };\n\n  React.useEffect(() => {\n    setRules((old) => {\n      const mod = [...old];\n      mod[index] = { name: old[index].name, contents: state };\n      return mod;\n    });\n  }, [state, index, setRules]);\n\n  const handleSubmit = (e) => {\n    if (onFinished) onFinished();\n    e.preventDefault();\n  };\n\n  return (\n    <div id=\"AddContentsPopover\" className=\"AddPopover\">\n      <h2>Add Contents</h2>\n      <p>\n        Click the button below to add a content choice to the list of contents,\n        or edit an existing content choice using the input fields.\n      </p>\n      <form id=\"addContentsForm\" onSubmit={handleSubmit}>\n        {state.map((content, i) => (\n          <div className=\"contentRow\" key={i}>\n            <TextareaAutosize\n              type=\"text\"\n              value={state[i]}\n              onChange={handleChange(i)}\n              className=\"addInput\"\n            />\n            <button type=\"button\" onClick={handleDeleteContent(i)}>\n              Delete\n            </button>\n          </div>\n        ))}\n        <div id=\"bottomButtons\">\n          <button type=\"button\" onClick={handleAdd}>\n            Add content choice\n          </button>\n          {isDeleteable ? (\n            <button type=\"button\" onClick={handleDeleteRule}>\n              Delete rule\n            </button>\n          ) : null}\n          <button type=\"submit\" form=\"addContentsForm\">\n            Finished\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nAddContents.propTypes = {\n  contents: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setRules: PropTypes.func.isRequired,\n  onFinished: PropTypes.func,\n  index: PropTypes.number,\n  isDeleteable: PropTypes.bool.isRequired,\n};\n\nexport default AddContents;\n","import React from \"react\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport PopoverButton from \"./PopoverButton.js\";\nimport AddRules from \"./AddRules.js\";\nimport AddContents from \"./AddContents.js\";\nimport tracery from \"tracery-grammar\";\n\nconst FreezeButton = ({ isFrozen, setIsFrozen }) => {\n  const toggle = () => setIsFrozen(!isFrozen);\n  const text = isFrozen ? \"Unfreeze\" : \"Freeze\";\n  return (\n    <button type=\"button\" onClick={toggle}>\n      {text}\n    </button>\n  );\n};\nFreezeButton.propTypes = {\n  isFrozen: PropTypes.bool.isRequired,\n  setIsFrozen: PropTypes.func.isRequired,\n};\n\nconst App = () => {\n  const [isPopoverActive, setIsPopoverActive] = React.useState(false);\n  const [popoverContent, setPopoverContent] = React.useState(null);\n  const [activeButton, setActiveButton] = React.useState(\"\");\n  const [slidingOut, setSlidingOut] = React.useState(false);\n  const [originRule, setOriginRule] = React.useState([\n    {\n      name: \"origin\",\n      contents: [\"Start editing rules to generate text\"],\n    },\n  ]);\n  const [rules, setRules] = React.useState([]);\n  const [isFrozen, setIsFrozen] = React.useState(false);\n  const [traceryOutput, setTraceryOutput] = React.useState([]);\n\n  const pruneRules = () => {\n    setRules((old) => {\n      return old.filter((o) => o.name !== \"\");\n    });\n  };\n  function timeout(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  const loadChicken = (e) => {\n    e.preventDefault();\n    setOriginRule([\n      {\n        name: \"origin\",\n        contents: [\n          '\"Guess what?\"\\n\"What?\"\\n\"#Guess What#.\"',\n          '\"Guess why?\"\\n\"Why?\"\\n\"#Guess Why#.\"',\n          '\"Guess who?\"\\n\"Who?\"\\n\"#Guess Who#.\"',\n        ],\n      },\n    ]);\n    setRules([\n      { name: \"Guess What\", contents: [\"Chicken Butt\"] },\n      { name: \"Guess Why\", contents: [\"Chicken Pot Pie\", \"Chicken Thigh\"] },\n      { name: \"Guess Who\", contents: [\"Chicken Stew\", \"Chicken Cordon Bleu\"] },\n    ]);\n  };\n  const loadAdvanced = (e) => {\n    e.preventDefault();\n    setOriginRule([\n      {\n        name: \"origin\",\n        contents: [\"Once upon a time, #[#setCharacter#]story#\"],\n      },\n    ]);\n    setRules([\n      {\n        name: \"name\",\n        contents: [\n          \"Arjun\",\n          \"Yuuma\",\n          \"Darcy\",\n          \"Mia\",\n          \"Chiaki\",\n          \"Izzi\",\n          \"Azra\",\n          \"Lina\",\n        ],\n      },\n      {\n        name: \"animal\",\n        contents: [\n          \"unicorn\",\n          \"raven\",\n          \"sparrow\",\n          \"scorpion\",\n          \"coyote\",\n          \"eagle\",\n          \"owl\",\n          \"lizard\",\n          \"zebra\",\n          \"duck\",\n          \"kitten\",\n        ],\n      },\n      {\n        name: \"occupationBase\",\n        contents: [\n          \"wizard\",\n          \"witch\",\n          \"detective\",\n          \"ballerina\",\n          \"criminal\",\n          \"pirate\",\n          \"lumberjack\",\n          \"spy\",\n          \"doctor\",\n          \"scientist\",\n          \"captain\",\n          \"priest\",\n        ],\n      },\n      {\n        name: \"occupationMod\",\n        contents: [\n          \"occult \",\n          \"space \",\n          \"professional \",\n          \"gentleman \",\n          \"erotic \",\n          \"time \",\n          \"cyber\",\n          \"paleo\",\n          \"techno\",\n          \"super\",\n        ],\n      },\n      {\n        name: \"strange\",\n        contents: [\n          \"mysterious\",\n          \"portentous\",\n          \"enchanting\",\n          \"strange\",\n          \"eerie\",\n        ],\n      },\n      { name: \"tale\", contents: [\"story\", \"saga\", \"tale\", \"legend\"] },\n      { name: \"occupation\", contents: [\"#occupationMod##occupationBase#\"] },\n      {\n        name: \"mood\",\n        contents: [\n          \"vexed\",\n          \"indignant\",\n          \"impassioned\",\n          \"wistful\",\n          \"astute\",\n          \"courteous\",\n        ],\n      },\n      {\n        name: \"setPronouns\",\n        contents: [\n          \"[heroThey:they][heroThem:them][heroTheir:their][heroTheirs:theirs]\",\n          \"[heroThey:she][heroThem:her][heroTheir:her][heroTheirs:hers]\",\n          \"[heroThey:he][heroThem:him][heroTheir:his][heroTheirs:his]\",\n        ],\n      },\n      {\n        name: \"setSail\",\n        contents: [\n          \"set sail for adventure\",\n          \"left #heroTheir# home\",\n          \"set out for adventure\",\n          \"went to seek #heroTheir# forture\",\n        ],\n      },\n      {\n        name: \"setCharacter\",\n        contents: [\"[#setPronouns#][hero:#name#][heroJob:#occupation#]\"],\n      },\n      {\n        name: \"openBook\",\n        contents: [\n          \"An old #occupation# told #hero# a story. 'Listen well' she said to #hero#, 'to this #strange# #tale#. ' #origin#'\",\n          \"#hero# went home.\",\n          \"#hero# found an ancient book and opened it.  As #hero# read, the book told #strange.a# #tale#: #origin#\",\n        ],\n      },\n      {\n        name: \"story\",\n        contents: [\"#hero# the #heroJob# #setSail#. #openBook#\"],\n      },\n    ]);\n  };\n  const hidePopover = async (e) => {\n    if (!e || e.target === e.currentTarget) {\n      setSlidingOut(true);\n      await timeout(201);\n      setIsPopoverActive(false);\n      setSlidingOut(false);\n      setActiveButton(\"\");\n      pruneRules();\n    }\n  };\n  const displayPopover = async (name, content) => {\n    if (isPopoverActive) await hidePopover();\n    setPopoverContent(content);\n    setIsPopoverActive(true);\n    setActiveButton(name);\n  };\n  const PopoverButtonWrapper = ({\n    name,\n    content,\n    children,\n    injectCallback,\n  }) => {\n    return (\n      <PopoverButton\n        name={name}\n        displayPopover={displayPopover}\n        isPopoverActive={isPopoverActive}\n        activeButton={activeButton}\n        hidePopover={hidePopover}\n        content={content}\n        injectCallback={injectCallback}\n      >\n        {children}\n      </PopoverButton>\n    );\n  };\n  PopoverButtonWrapper.propTypes = {\n    name: PropTypes.string.isRequired,\n    content: PropTypes.node,\n    children: PropTypes.node,\n    injectCallback: PropTypes.bool,\n  };\n\n  const popoverClass = slidingOut ? \"slide-out\" : \"slide-in\";\n\n  React.useEffect(() => {\n    if (!isFrozen) {\n      const inGrammar = rules.reduce((acc, curr) => {\n        acc[curr.name] = curr.contents;\n        return acc;\n      }, {});\n      inGrammar[\"origin\"] = originRule[0].contents;\n      var grammar = tracery.createGrammar(inGrammar);\n      grammar.addModifiers(tracery.baseEngModifiers);\n      setTraceryOutput(grammar.flatten(\"#origin#\").split(\"\\n\"));\n    }\n  }, [rules, originRule, isFrozen]);\n\n  return (\n    <div className=\"App\">\n      <div id=\"sidebar\" onClick={(e) => hidePopover(e)}>\n        <div id=\"dynamicContent\">\n          <PopoverButtonWrapper name={originRule[0].name} injectCallback={true}>\n            <AddContents\n              contents={originRule[0].contents}\n              setRules={setOriginRule}\n              index={0}\n              isDeleteable={false}\n            />\n          </PopoverButtonWrapper>\n          {rules.map((rule, i) => (\n            <PopoverButtonWrapper\n              key={i}\n              name={rule.name}\n              injectCallback={true}\n            >\n              <AddContents\n                contents={rule.contents}\n                setRules={setRules}\n                index={i}\n                isDeleteable={true}\n              />\n            </PopoverButtonWrapper>\n          ))}\n        </div>\n        <div id=\"staticContent\">\n          <div className=\"ruleButtonDiv\">\n            <button\n              type=\"button\"\n              className=\"ruleButton unselectedButton\"\n              onClick={() => {\n                setOriginRule([\n                  {\n                    name: \"origin\",\n                    contents: [\"Start editing rules to generate text\"],\n                  },\n                ]);\n                setRules([]);\n              }}\n            >\n              Clear Rules\n            </button>\n          </div>\n          <PopoverButtonWrapper name=\"Add Rule\" injectCallback={true}>\n            <AddRules rules={rules} setRules={setRules} />\n          </PopoverButtonWrapper>\n        </div>\n      </div>\n\n      <div id=\"viewport\" onClick={(e) => hidePopover(e)}>\n        {isPopoverActive ? (\n          <div id=\"popover\" className={popoverClass}>\n            {popoverContent}\n          </div>\n        ) : null}\n        <div id=\"viewport-contents\">\n          <h2>Tracery Builder</h2>\n          <p>\n            This is a react app that can be used to build grammars for Kate\n            Compton&apos;s{\" \"}\n            <a href=\"https://github.com/galaxykate/tracery\">Tracery language</a>\n            . The origin rule is always the starting point and cannot be\n            deleted. Additional rules can be added using the Add Rule button at\n            the bottom of the sidebar. Clicking a rule in the sidebar will allow\n            you to edit or delete the rule.\n          </p>\n          <p>\n            To generate a new expansion, click Generate. To prevent the current\n            expansion from being overwritten, click the Freeze button. Click it\n            again to resume generating expansions.\n          </p>\n          <p>\n            To load a simple example grammar:{\" \"}\n            <a href=\"#\" onClick={loadChicken}>\n              click here\n            </a>\n            .\n            <br />\n            To load a complex example grammar:{\" \"}\n            <a href=\"#\" onClick={loadAdvanced}>\n              click here\n            </a>\n            .\n          </p>\n          <div id=\"tracery-container\">\n            <div id=\"tracery-contents\">\n              {traceryOutput.map((line, i) => (\n                <span key={i}>\n                  {line}\n                  <br />\n                </span>\n              ))}\n              <div id=\"bottomButtons\">\n                <FreezeButton isFrozen={isFrozen} setIsFrozen={setIsFrozen} />\n                <button\n                  type=\"button\"\n                  onClick={() => setRules((old) => [...old])}\n                >\n                  Generate\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}